/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export declare namespace MoneyBoxesModule {
  export type MoneyBoxConfigurationStruct = {
    percentage: BigNumberish;
    name: string;
    isActive: boolean;
  };

  export type MoneyBoxConfigurationStructOutput = [
    BigNumber,
    string,
    boolean
  ] & { percentage: BigNumber; name: string; isActive: boolean };
}

export interface MoneyBoxesFactoryAbiInterface extends utils.Interface {
  functions: {
    "createMoneyBoxesContract(address,(uint256,string,bool)[])": FunctionFragment;
    "getUserLatestMoneyBox(address)": FunctionFragment;
    "moneyBoxes(address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "createMoneyBoxesContract"
      | "getUserLatestMoneyBox"
      | "moneyBoxes"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "createMoneyBoxesContract",
    values: [string, MoneyBoxesModule.MoneyBoxConfigurationStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserLatestMoneyBox",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "moneyBoxes",
    values: [string, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createMoneyBoxesContract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserLatestMoneyBox",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "moneyBoxes", data: BytesLike): Result;

  events: {
    "MoneyBoxesCreated(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "MoneyBoxesCreated"): EventFragment;
}

export interface MoneyBoxesCreatedEventObject {
  moneyBox: string;
  owner: string;
}
export type MoneyBoxesCreatedEvent = TypedEvent<
  [string, string],
  MoneyBoxesCreatedEventObject
>;

export type MoneyBoxesCreatedEventFilter =
  TypedEventFilter<MoneyBoxesCreatedEvent>;

export interface MoneyBoxesFactoryAbi extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MoneyBoxesFactoryAbiInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    createMoneyBoxesContract(
      _safeAddress: string,
      _boxesConfiguration: MoneyBoxesModule.MoneyBoxConfigurationStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<ContractTransaction>;

    getUserLatestMoneyBox(
      _user: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    moneyBoxes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  createMoneyBoxesContract(
    _safeAddress: string,
    _boxesConfiguration: MoneyBoxesModule.MoneyBoxConfigurationStruct[],
    overrides?: Overrides & { from?: string }
  ): Promise<ContractTransaction>;

  getUserLatestMoneyBox(
    _user: string,
    overrides?: CallOverrides
  ): Promise<string>;

  moneyBoxes(
    arg0: string,
    arg1: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    createMoneyBoxesContract(
      _safeAddress: string,
      _boxesConfiguration: MoneyBoxesModule.MoneyBoxConfigurationStruct[],
      overrides?: CallOverrides
    ): Promise<string>;

    getUserLatestMoneyBox(
      _user: string,
      overrides?: CallOverrides
    ): Promise<string>;

    moneyBoxes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "MoneyBoxesCreated(address,address)"(
      moneyBox?: string | null,
      owner?: string | null
    ): MoneyBoxesCreatedEventFilter;
    MoneyBoxesCreated(
      moneyBox?: string | null,
      owner?: string | null
    ): MoneyBoxesCreatedEventFilter;
  };

  estimateGas: {
    createMoneyBoxesContract(
      _safeAddress: string,
      _boxesConfiguration: MoneyBoxesModule.MoneyBoxConfigurationStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<BigNumber>;

    getUserLatestMoneyBox(
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    moneyBoxes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createMoneyBoxesContract(
      _safeAddress: string,
      _boxesConfiguration: MoneyBoxesModule.MoneyBoxConfigurationStruct[],
      overrides?: Overrides & { from?: string }
    ): Promise<PopulatedTransaction>;

    getUserLatestMoneyBox(
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    moneyBoxes(
      arg0: string,
      arg1: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
